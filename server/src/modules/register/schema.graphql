type Mutation {
  register(
    email: String!
    password: String!
    name: String!
    role: String!
  ): RegisterResult!
  resendConfirmationEmail(email: String!): SendEmailResult!
}

type Query {
  bye: String
}

type ConfirmationEmailSent {
  message: String!
}

type EmailNotSentError {
  path: String!
  message: String!
}

type FieldError {
  message: String!
  path: String!
}

type FieldErrors {
  errors: [FieldError!]!
}

type UserAlreadyExistsError {
  message: String!
  path: String!
}

type UserRegistered {
  message: String!
}

union RegisterResult = FieldErrors | UserRegistered | UserAlreadyExistsError

union SendEmailResult = FieldErrors | ConfirmationEmailSent | EmailNotSentError
